/*global Daria, Page, Actions, Action, hSettings, bCompose */

Actions.add(
    new Action("compose.go", function(o) {
        // Засовываем параметры для композа в Daria.composeParams. При открытии композ смотрит в Daria.composeParams.
        // Например, чтобы открыть композ с заполненным полем "Кому", нужно сохранить в Daria.composeParams свойство to.
        // <a class="daria-action" action="compose.go" params="to=stepan@yandex-team.ru">
        Daria.composeParams = o.params || {};
        if (Page.type === 'compose') { // Если находимся в композе, то нужно вручную прочистить форму композа
            var go = events.trigger("beforeunload");
            if (go === false) {
                if (!confirm('Вы не отправили письмо и не сохранили его как черновик. Для того, чтобы вернуться и сохранить изменения, нажмите «Отмена», в противном случае набранный вами текст будет потерян.')) { return; }
            }
            bCompose.reset();
            bCompose.open();
        } else if (Page.type === 'contacts') { // Если находимся в АК, то кладем заселекченные контакты в Daria.composeParams
            Daria.composeParams = Daria.Abook.getSelectedAsStrings();
        }
        Page.go("#compose");
    })
);

Actions.add(
    new Action("compose.add-from", function() {
        bCompose.addFrom();
        bCompose.focusFrom();
    })
);

Actions.add(
    new Action("compose.add-cc", function() {
        bCompose.addCopy('cc');
        bCompose.focusCc();
    })
);

Actions.add(
    new Action("compose.add-bcc", function() {
        bCompose.addCopy('bcc');
        bCompose.focusBcc();
    })
);

Actions.add(
    new Action("compose.to-html-mode", function() {
        bCompose.setHtmlMode();
        bCompose.focusBody();
        hSettings.setSettingOn('enable_richedit');
    })
);

Actions.add(
    new Action("compose.to-text-mode", function() {
        var value = bCompose.getBody();
        value = Daria.Html2Text.html2text(value);

        // \s is the same as [\f\n\r\t\u000B\u0020\u00A0\u2028\u2029].
        // This is a partial set of Unicode whitespace characters.
        // \S is the opposite: [^\f\n\r\t\u000B\u0020\u00A0\u2028\u2029].

        if (/\S/.test(value)) {
            Daria.Libs("Daria.Dialog", function() {
                Daria.Dialog.confirm({
                    body: '<p>Форматирование текста и&#160;изображения будут потеряны.</p>',
                    okHandler: function() {
                        bCompose.setTextMode();
                        bCompose.focusBody();
                        hSettings.setSettingOff('enable_richedit');
                    },
                    oncancel: function() {
                        bCompose.focusBody();
                    }
                });
            });
        } else {
            bCompose.setTextMode();
            bCompose.focusBody();
            hSettings.setSettingOff('enable_richedit');
        }
    })
);

Actions.add(
    new Action("compose.send", function() {
        var $form = bCompose.getForm();
        $form.submit();
    })
);

Actions.add(
    new Action("compose.close", function() {
        Daria.Page.History.back(); // Отправляем пользователя обратно
    })
);

Actions.add(
    new Action("compose.save", function() {
        bCompose.save();
    })
);

Actions.add(new Action("compose.delete", function(){
    // если в композе есть id и нет oper-a, то это черновик и его можно удалить
    if (!Page.params.oper && Page.params.ids) {
        Actions.run('delete', { "message-id": Page.params.ids });
    }
}));

// переключение категорий открыток
Actions.add(new Action("compose.postcards-switch-theme", function(o){
    var params = o.params;
    var $cards = $(".b-mail-tabs_postcard", bCompose.$form);
    $cards.find(".b-mail-ribbon .theme-" + this.tid).addClass('g-hidden');
    $cards.find(".b-mail-ribbon .theme-" + params.tid).removeClass('g-hidden');

    $cards.find(".b-mail-tabs__head .theme-" + this.tid).removeClass('b-mail-tabs__item_current');
    $cards.find(".b-mail-tabs__head .theme-" + params.tid).addClass('b-mail-tabs__item_current');

    this.tid = params.tid;
})).tid = 1;

// Вставка открытки
Actions.add(new Action("compose.postcards-insert", function(o){
    var params = o.params || {};
alert(1);
    if(window.tinyMCE){
        // Вставить открытку
        tinyMCE.execCommand("yaInsertCard", params);
    }

    // Выделяем открытку
    $(".b-mail-tabs_postcard .b-mail-ribbon__item_current", bCompose.$form).removeClass("b-mail-ribbon__item_current");
    $(o.event.currentTarget).addClass("b-mail-ribbon__item_current");

    // Раскрываем визифиг
    $(".b-compose-message", bCompose.$form).removeClass("g-hidden");

    // В сабджект письма подставляем тайтл открытки
    bCompose.setSubject(params.title);
alert(2);
    Actions.run('compose.postcards-ribbon-switch');
alert(3);
}));

// Переключение между многострочным и однострочным списком открыток
Actions.add(new Action("compose.postcards-ribbon-switch", function(o){
    var params = o.params || {};

    // Убираем выделение с открытки
    if(params.list){
        $(".b-mail-ribbon__item_current").removeClass("b-mail-ribbon__item_current");
    }

    $(".b-mail-tabs__content .b-mail-ribbon", bCompose.$form)[params.list ? 'addClass' : 'removeClass']('b-mail-ribbon_list');
    $(".b-mail-tabs__content-extra", bCompose.$form)[params.list ? 'removeClass' : 'addClass']('g-hidden');

    // Ресайзим поле ввода тела письма
    bCompose.calcBodyHeight();
}));

// Проскроливание открыток
Actions.add(new Action("compose.postcards-ribbon-scroll", function(o){
    var params = o.params || {};
    var dir = params.dir;

    // Активная закладка
    var tid = Daria.Actions.get('compose.postcards-switch-theme').tid;
    var $cont =  $(".b-mail-tabs_postcard .b-mail-ribbon .theme-" + tid, bCompose.$form);

    if(dir === 'left') {
        $("a:first", $cont).appendTo($cont);
    } else {
        $("a:last", $cont).prependTo($cont);
    }
}));

// Проверка орфографических ошибок
Actions.add(
    new Action("compose.spellcheck", function() {

        // Начинаем проверку
        function start(){
            $(".b-compose-message__toolbar-item_orpho span").text("Закончить проверку");
        }

        // Закончили проверку
        function end(){
            $(".b-compose-message__toolbar-item_orpho span").text("Проверить орфографию");
        }

        tinyMCE.execCommand("mceSpellCheck", false, {start:start, end:end});
    })
);

// Переключение между типами композа
Actions.add(
    new Action("compose.switch-type", function(o) {
        events.trigger("compose.switch-type", o.params.type);
    })
);

// Дополнительные параметры
Actions.add(
    new Action("compose.additional", function() {
      bCompose.toggleAdditionalParams();
    })
);
