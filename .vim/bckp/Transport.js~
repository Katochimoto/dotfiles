if (!window.Daria) {
    window.Daria = {};
}

/**
 * Класс инициализирует бекэнд и управляет слушателями сообщений.
 * @class Транспорт
 */
Daria.Transport = function(url, forceBackend) {
    this.url = url;

    var Transports = ['WebSocket', 'Flash', 'IFrame'],
        BackendTransportName,
        findBackend = false,
        i = 0,
        j;

    if (forceBackend) {
        Transports = [forceBackend];
    }

    for (j = Transports.length; i < j; i++) {
        BackendTransportName = Transports[i];
        if (!findBackend && Daria.Transport.Backend[BackendTransportName].test()) {
            this._createBackend(BackendTransportName);
            findBackend = true;
        }
    }
};

Daria.Transport.prototype = {

    /**
     * Экземпляр бекэнда.
     * @private
     * @type Daria.Transport.Backend
     */
    _socket: null,

    onmessage: function(msg) {
        Daria.events.trigger("transport." + msg.operation, msg);
    },

    /**
     * Обрывает текущее соединение.
     * @return Daria.Transport
     */
    abort: function() {
        if (this._socket) {
            this._socket.abort();
        }
        
        return this;
    },

    /**
     * Создает бекенд с указанным транспортом.
     * @param {String} transport Название транспорта.
     * @private
     */
    _createBackend: function(transport) {
        var Backend = Daria.Transport.Backend;

        Daria.Transport.log('Transport: create', transport);
        Backend.prototype = $.extend(Backend.Interface, Backend[transport].prototype);
        
        this._socket = new Backend(this.url);

        // слушаем сообщения
        this._socket.processMessage = (function(self) {
            return function(data) {
                self.onmessage(data);
            }
        })(this);
    }

};

Daria.Transport.__instance = null;

/**
 * Возвращает экземпляр транспорта.
 * @param {jQuery.url} url Если указан урл, то создает транспорт с указанным урл.
 * @return {Daria.Transport}
 */
Daria.Transport.getInstance = function(url) {
    // если нет транспорта или есть урл
    if (Daria.Transport.__instance === null || url) {
        // если уже есть транспорт, то убиваем его
        if (Daria.Transport.__instance) {
            Daria.Transport.__instance.abort();
            Daria.Transport.__instance = null;
        }
        Daria.Transport.__instance = new Daria.Transport(url);
    }

    return Daria.Transport.__instance;
};

include('Transport/Backend.js');
include('Transport/Backend/Flash.js');
include('Transport/Backend/IFrame.js');
include('Transport/Backend/WebSocket.js');
include('Wrapper.js');
include('Transport/Logger.js');

include('jquery.type.js');
include('jquery.url.js');

if (!window.console) {
    window.console = {
        log: function() {
            $('#log').append('<pre>' + Array.prototype.concat.apply([], arguments).join(', ') + '</pre>');
        },
        error: function() {
            $('#log').append('<pre><span style="color:red">' + Array.prototype.concat.apply([], arguments).join(', ') + '</span></pre>');    
        }
    }
}
