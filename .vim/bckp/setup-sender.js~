
/* ------------------------------------------------------------------------------------------------------------- */

var bSetupSender;

Block.SetupSender = function() {
    Block.apply(this, arguments);

    bSetupSender = this;
};

Daria.extend(Block.SetupSender, Block);

Block.add({
    name: "setup-sender",
    info: {
        handlers: [ "settings", "account-information", "setup-menu" ]
    },
    constructor: Block.SetupSender
});

/* ------------------------------------------------------------------------------------------------------------- */

Block.SetupSender.prototype.onhtmlinit = function(){

    var $node = $(this.cache.node);
    var $form = $node.find('form:eq(0)');

    // инициализация настроек с самопоказываемой кнопкой сохранить
    new Daria.FormCacher($node.find('.b-setup__inner:eq(0)'));

    this.$userpic = $node.find('.b-userpic-choose__pic-image__image');

    this.$userpicFile = $node.find('.b-input-file__input__file')
        .change(this.uploadUserpic.bind(this));

    // TODO: было бы круто подгрузить только, если вызвана функцианальность загрузки аватара,
    // TODO: но там оно, судя по всему не успевает подгрузиться
    Daria.Libs("jQuery.Form", function(){
        // при сохранении настроек нужно выделить жирным адрес с которого будет отправляться почта
        // по умолчанию, если он изменился
        $form.bind('onSave', function(){
            if(!$(this).find('.b-form-element__radio_checked .b-form-element__radio__input:checked').length){
                $(this).find('.b-form-element__radio_checked')
                    .removeClass('b-form-element__radio_checked');
                $(this).find('.b-form-element__radio__input:checked').each(function(){
                    $(this).closest('.b-form-element__radio').addClass('b-form-element__radio_checked');
                });
            }
        });
    });
};

/**
 * Загружает картинку пользователя
 */
Block.SetupSender.prototype.uploadUserpic = function(){
    
    // при необходимости загрузить юзер пик
    // создаётся временная форма, в которую будет добавлен input@file
    // чтобы отправить юзерпик на сервер
    if(this.$upicUploadForm){
        // если форма уже была создана, то она чистится
        this.$upicUploadForm.empty();
    }
    else {
        this.$upicUploadForm =
            $('<form class="g-hidden" method="post" enctype="multipart/form-data" action="/"></form>')
            .appendTo(document.body);
    }

    // создаётся клон input@file
    var $newUserpicFile = this.$userpicFile.clone()
        // навещивается тот же обработчик изменения значения
        // можно было бы клонировать с обработчиками, но это менее надёжно
        .change(this.uploadUserpic.bind(this))
        // обнуляется значения - работает не во всех броузерах,
        // а в тех, что не работает помогает само клонирование
        .val('');

    // клон вставляется на место старого input@file
    this.$userpicFile.replaceWith($newUserpicFile);
    // а старый добавляется в форму, которая сейчас засабмитится
    this.$upicUploadForm.append(this.$userpicFile);
    // обработчики старому input@file не нужны
    this.$userpicFile.unbind();
    // перетирается ссылка - свойство бъекта SetupSender
    // теперь указывает на свежий клон
    this.$userpicFile = $newUserpicFile;

    // сабмитися форма со старым заполненным input@file
    this.$upicUploadForm.ajaxSubmit({
        iframe: true,
        data: {
            service: 'mail'
        },
        dataType: 'text',
        url: '//upics.yandex.ru/upload',
        complete: this.onUploadUserpic.bind(this)
    });    
};

/**
 * Обработчик успешной загрузки юзерпика
 */
Block.SetupSender.prototype.onUploadUserpic = function(){
    var updatedSrc = this.$userpic.attr('data-src') + '?rnd=' + (new Date()).getTime();
    this.$userpic.attr('src', updatedSrc);
    // после загрузки нужно показать ссылку "удалить"
    this.$userpic.closest('.b-userpic-choose__pic').find('.b-userpic-choose__pic-delete').removeClass('g-hidden');

    // если есть композ, то он закэширован и в нём тоже нужно обновить аватарку
    if(bCompose){
        $('.b-compose-head__userpic__img', bCompose.getCache().node).attr('src', updatedSrc);
    }
};

/**
 * Обработчик работы camera.swf (пользователь сфоткался и его юпик залился на сервер)
 * обновляет юпик
 * закрывает диалог с камерой
 */
Block.SetupSender.prototype.onUserpicMake = function(){
    this.onUploadUserpic();
    Daria.Dialog.close();
};
