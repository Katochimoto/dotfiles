var bLentaPostsBox;

Block.LentaPostsBox = function() {
    Block.apply(this, arguments);
    bLentaPostsBox = this;
}

Daria.extend(Block.LentaPostsBox, Block);

Block.add({
    name: "lenta-posts-box",
    info: {
        box: true
    },
    constructor: Block.LentaPostsBox
});

Block.LentaPostsBox.prototype.onhtmlinit = function() {
    var _this = this;
    // на сколько было прокручено окно в последний раз
    var lastScroll = $(window).scrollTop();
    var onScroll = function() {
        var currentScroll = $(window).scrollTop();
        Daria.events.trigger('onScroll.lenta', {diff: currentScroll - lastScroll, block: _this.active});
        lastScroll = currentScroll;
    };

    var onResize =  function() {
        Daria.events.trigger('onResize.lenta', {block: _this.active});
    };

    // обработчик скрола срабатывает только после того, как перестали скролить
    var scrollPid;
    $(window).scroll(function(evt){
        if (typeof scrollPid == 'number'){
            clearTimeout(scrollPid);
        }
        scrollPid = setTimeout(onScroll, 200);
    });

    // обработчик ресайза окна
    var resizePid;
    $(window).resize(function(evt){
        if (typeof resizePid == 'number'){
            clearTimeout(resizePid);
        }
        resizePid = setTimeout(onResize, 200);
    });

    Daria.events.bind('onPostToggle.lenta-box', function(evt, data){
        Daria.events.trigger('onPostToggle.lenta', {block: _this.active});
    });
};

Block.LentaPostsBox.prototype.selectName = function(params) {
    return "lenta-posts";
};

Block.LentaPostsBox.prototype.iteratePosts = function(ids, callback) {
    Daria.iterateIds(this.cache.node, "post-", ids, callback);
};
